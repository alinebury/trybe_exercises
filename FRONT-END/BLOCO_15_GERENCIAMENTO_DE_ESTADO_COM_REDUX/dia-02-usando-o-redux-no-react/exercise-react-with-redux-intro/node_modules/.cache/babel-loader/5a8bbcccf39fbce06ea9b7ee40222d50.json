{"ast":null,"code":"var _jsxFileName = \"/home/aline/trybe/trybe_exercises/FRONT-END/BLOCO_15_GERENCIAMENTO_DE_ESTADO_COM_REDUX/dia-02-usando-o-redux-no-react/exercise-react-with-redux-intro/src/TrafficSignal.jsx\";\nimport React from 'react';\nimport redSignal from './images/redSignal.jpeg';\nimport greenSignal from './images/greenSignal.jpeg';\nimport yellowSignal from './images/yellowSignal.jpeg';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeSignal as changeSignalAction } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderSignal = signalColor => {\n  if (signalColor === 'red') {\n    return redSignal;\n  }\n\n  if (signalColor === 'green') {\n    return greenSignal;\n  }\n\n  if (signalColor === 'yellow') {\n    return yellowSignal;\n  }\n\n  return null;\n};\n\nconst TrafficSignal = _ref => {\n  let {\n    signalColor,\n    changeSignal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => changeSignal('red'),\n        children: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => changeSignal('yellow'),\n        children: \"Yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => changeSignal('green'),\n        children: \"Green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"signal\",\n      src: renderSignal(signalColor),\n      alt: \"\",\n      width: '200px'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TrafficSignal;\n\nconst mapStateToProps = state => ({\n  signalColor: state.color\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeSignal: payload => dispatch(changeSignalAction(payload))\n});\n\nTrafficSignal.propTypes = {\n  changeSignal: PropTypes.func.isRequired,\n  signalColor: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrafficSignal);\n\nvar _c;\n\n$RefreshReg$(_c, \"TrafficSignal\");","map":{"version":3,"sources":["/home/aline/trybe/trybe_exercises/FRONT-END/BLOCO_15_GERENCIAMENTO_DE_ESTADO_COM_REDUX/dia-02-usando-o-redux-no-react/exercise-react-with-redux-intro/src/TrafficSignal.jsx"],"names":["React","redSignal","greenSignal","yellowSignal","PropTypes","connect","changeSignal","changeSignalAction","renderSignal","signalColor","TrafficSignal","mapStateToProps","state","color","mapDispatchToProps","dispatch","payload","propTypes","func","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAY,IAAIC,kBAAzB,QAAmD,WAAnD;;;AAEA,MAAMC,YAAY,GAAIC,WAAD,IAAiB;AACpC,MAAIA,WAAW,KAAK,KAApB,EAA2B;AACzB,WAAOR,SAAP;AACD;;AACD,MAAIQ,WAAW,KAAK,OAApB,EAA6B;AAC3B,WAAOP,WAAP;AACD;;AACD,MAAIO,WAAW,KAAK,QAApB,EAA8B;AAC5B,WAAON,YAAP;AACD;;AACD,SAAO,IAAP;AACD,CAXD;;AAaA,MAAMO,aAAa,GAAG,QAAmC;AAAA,MAAlC;AAAED,IAAAA,WAAF;AAAeH,IAAAA;AAAf,GAAkC;AACvD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAG,MAAMA,YAAY,CAAC,KAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAG,MAAMA,YAAY,CAAC,QAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAG,MAAMA,YAAY,CAAC,OAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAEE,YAAY,CAACC,WAAD,CAAzC;AAAwD,MAAA,GAAG,EAAC,EAA5D;AAA+D,MAAA,KAAK,EAAE;AAAtE;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;KAAMC,a;;AAaN,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAAEH,EAAAA,WAAW,EAAEG,KAAK,CAACC;AAArB,CAAZ,CAAxB;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCT,EAAAA,YAAY,EAAGU,OAAD,IAAaD,QAAQ,CAACR,kBAAkB,CAACS,OAAD,CAAnB;AADK,CAAf,CAA3B;;AAIAN,aAAa,CAACO,SAAd,GAA0B;AACxBX,EAAAA,YAAY,EAAEF,SAAS,CAACc,IAAV,CAAeC,UADL;AAExBV,EAAAA,WAAW,EAAEL,SAAS,CAACgB,MAAV,CAAiBD;AAFN,CAA1B;AAKA,eAAed,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CJ,aAA7C,CAAf","sourcesContent":["import React from 'react';\nimport redSignal from './images/redSignal.jpeg'\nimport greenSignal from './images/greenSignal.jpeg';\nimport yellowSignal from './images/yellowSignal.jpeg';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeSignal as changeSignalAction } from './actions';\n\nconst renderSignal = (signalColor) => {\n  if (signalColor === 'red') {\n    return redSignal;\n  }\n  if (signalColor === 'green') {\n    return greenSignal;\n  }\n  if (signalColor === 'yellow') {\n    return yellowSignal;\n  }\n  return null;\n};\n\nconst TrafficSignal = ({ signalColor, changeSignal }) => {\n  return (\n    <div>\n      <div className=\"button-container\">\n        <button type=\"button\" onClick={ () => changeSignal('red')}>Red</button>\n        <button type=\"button\" onClick={ () => changeSignal('yellow')}>Yellow</button>\n        <button type=\"button\" onClick={ () => changeSignal('green')}>Green</button>\n      </div>\n      <img className=\"signal\" src={renderSignal(signalColor)} alt=\"\" width={'200px'}/>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({ signalColor: state.color });\nconst mapDispatchToProps = (dispatch) => ({\n  changeSignal: (payload) => dispatch(changeSignalAction(payload)),\n});\n\nTrafficSignal.propTypes = {\n  changeSignal: PropTypes.func.isRequired,\n  signalColor: PropTypes.string.isRequired, \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrafficSignal);\n"]},"metadata":{},"sourceType":"module"}