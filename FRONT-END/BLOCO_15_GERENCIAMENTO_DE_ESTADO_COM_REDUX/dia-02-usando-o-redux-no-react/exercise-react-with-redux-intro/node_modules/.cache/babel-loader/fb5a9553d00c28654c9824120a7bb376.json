{"ast":null,"code":"var _jsxFileName = \"/home/aline/trybe/trybe_exercises/FRONT-END/BLOCO_15_GERENCIAMENTO_DE_ESTADO_COM_REDUX/dia-02-usando-o-redux-no-react/exercise-react-with-redux-intro/src/TrafficSignal.jsx\";\n// src/TrafficSignal.js\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeSignal } from './actions';\nimport redSignal from './images/redSignal.jpeg';\nimport yellowSignal from './images/yellowSignal.jpeg';\nimport greenSignal from './images/greenSignal.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst renderSignal = signalColor => {\n  if (signalColor === 'red') return redSignal;\n  if (signalColor === 'yellow') return yellowSignal;\n  if (signalColor === 'green') return greenSignal;\n  return null;\n};\n\nconst TrafficSignal = _ref => {\n  let {\n    signalColor,\n    changeSignal\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeSignal('red'),\n        type: \"button\",\n        children: \"Red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeSignal('yellow'),\n        type: \"button\",\n        children: \"Yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeSignal('green'),\n        type: \"button\",\n        children: \"Green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"signal\",\n      src: renderSignal(signalColor),\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TrafficSignal;\n\nconst mapStateToProps = state => ({\n  signalColor: state.signal.color\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeSignal: payload => dispatch(changeSignal(payload))\n});\n\nTrafficSignal.propTypes = {\n  changeSignal: PropTypes.func.isRequired,\n  signalColor: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrafficSignal);\n\nvar _c;\n\n$RefreshReg$(_c, \"TrafficSignal\");","map":{"version":3,"sources":["/home/aline/trybe/trybe_exercises/FRONT-END/BLOCO_15_GERENCIAMENTO_DE_ESTADO_COM_REDUX/dia-02-usando-o-redux-no-react/exercise-react-with-redux-intro/src/TrafficSignal.jsx"],"names":["React","PropTypes","connect","changeSignal","redSignal","yellowSignal","greenSignal","renderSignal","signalColor","TrafficSignal","mapStateToProps","state","signal","color","mapDispatchToProps","dispatch","payload","propTypes","func","isRequired","string"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,MAAMC,YAAY,GAAIC,WAAD,IAAiB;AACpC,MAAIA,WAAW,KAAK,KAApB,EAA2B,OAAOJ,SAAP;AAC3B,MAAII,WAAW,KAAK,QAApB,EAA8B,OAAOH,YAAP;AAC9B,MAAIG,WAAW,KAAK,OAApB,EAA6B,OAAOF,WAAP;AAC7B,SAAO,IAAP;AACD,CALD;;AAOA,MAAMG,aAAa,GAAG,QAAmC;AAAA,MAAlC;AAAED,IAAAA,WAAF;AAAeL,IAAAA;AAAf,GAAkC;AACvD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,KAAD,CAAnC;AAA4C,QAAA,IAAI,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,QAAD,CAAnC;AAA+C,QAAA,IAAI,EAAC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAMA,YAAY,CAAC,OAAD,CAAnC;AAA8C,QAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAEI,YAAY,CAACC,WAAD,CAAzC;AAAwD,MAAA,GAAG,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;KAAMC,a;;AAmBN,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAAEH,EAAAA,WAAW,EAAEG,KAAK,CAACC,MAAN,CAAaC;AAA5B,CAAZ,CAAxB;;AAEA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,YAAY,EAAGa,OAAD,IAAaD,QAAQ,CAACZ,YAAY,CAACa,OAAD,CAAb;AADK,CAAf,CAA3B;;AAGAP,aAAa,CAACQ,SAAd,GAA0B;AACxBd,EAAAA,YAAY,EAAEF,SAAS,CAACiB,IAAV,CAAeC,UADL;AAExBX,EAAAA,WAAW,EAAEP,SAAS,CAACmB,MAAV,CAAiBD;AAFN,CAA1B;AAKA,eAAejB,OAAO,CAACQ,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CL,aAA7C,CAAf","sourcesContent":["// src/TrafficSignal.js\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeSignal } from './actions';\nimport redSignal from './images/redSignal.jpeg';\nimport yellowSignal from './images/yellowSignal.jpeg';\nimport greenSignal from './images/greenSignal.jpeg';\n\nconst renderSignal = (signalColor) => {\n  if (signalColor === 'red') return redSignal;\n  if (signalColor === 'yellow') return yellowSignal;\n  if (signalColor === 'green') return greenSignal;\n  return null;\n};\n\nconst TrafficSignal = ({ signalColor, changeSignal }) => {\n  return (\n    <div>\n      <div className=\"button-container\">\n        <button onClick={() => changeSignal('red')} type=\"button\">\n          Red\n        </button>\n        <button onClick={() => changeSignal('yellow')} type=\"button\">\n          Yellow\n        </button>\n        <button onClick={() => changeSignal('green')} type=\"button\">\n          Green\n        </button>\n      </div>\n      <img className=\"signal\" src={renderSignal(signalColor)} alt=\"\" />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({ signalColor: state.signal.color });\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeSignal: (payload) => dispatch(changeSignal(payload))});\n\nTrafficSignal.propTypes = {\n  changeSignal: PropTypes.func.isRequired,\n  signalColor: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrafficSignal);"]},"metadata":{},"sourceType":"module"}